version: '3.4'

services:
  awesomeleaderboard:
    restart: on-failure
    hostname: 'leaderboard-api.io'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "60000:80"
      - "60001:443"
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
    networks:
      - front-tier
      - back-tier
    healthcheck:
      test: curl --silent --fail http://localhost:80/status/health || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - datawriterservice

  mongo:
    ports:
      - "27017:27017"
    hostname: 'mongo.io'
    restart: on-failure
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - front-tier
      - back-tier

  redis:
    ports:
      - "6379:6379"
    hostname: 'redis.io'
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - back-tier
    
  redis-commander:
    hostname: 'redis-commander.io'
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - front-tier
      - back-tier
    depends_on:
      - redis

  rabbitmq:
    restart: always
    hostname: 'rabbit-mq.io'
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: nc -z rabbitmq 5672
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - RABBITMQ_DEFAULT_VHOST=USER_HOST
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - back-tier
    
  datawriterservice:
    restart: on-failure
    networks:
      - back-tier
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "60010:80"
      - "60011:443"
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
    healthcheck:
      test: curl --silent --fail http://localhost:80/status/health || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  front-tier: {}
  back-tier: {}